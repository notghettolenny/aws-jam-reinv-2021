[Container] 2021/12/09 17:06:14 Waiting for agent ping
[Container] 2021/12/09 17:06:15 Waiting for DOWNLOAD_SOURCE
[Container] 2021/12/09 17:06:16 Phase is DOWNLOAD_SOURCE
[Container] 2021/12/09 17:06:16 CODEBUILD_SRC_DIR=/codebuild/output/src357115735/src
[Container] 2021/12/09 17:06:16 YAML location is /codebuild/output/src357115735/src/buildspec.yaml
[Container] 2021/12/09 17:06:16 No commands found for phase name: install
[Container] 2021/12/09 17:06:16 Selecting shell bash as specified in buildspec.
[Container] 2021/12/09 17:06:16 Processing environment variables
[Container] 2021/12/09 17:06:16 Selecting 'python' runtime version '3.8' based on manual selections...
[Container] 2021/12/09 17:06:16 Running command echo "Installing Python version 3.8 ..."
Installing Python version 3.8 ...
[Container] 2021/12/09 17:06:16 Running command pyenv global  $PYTHON_38_VERSION
[Container] 2021/12/09 17:06:18 Moving to directory /codebuild/output/src357115735/src
[Container] 2021/12/09 17:06:18 Configuring ssm agent with target id: codebuild:d50ceb89-86f9-479b-972c-faf13a7f586b
[Container] 2021/12/09 17:06:18 Successfully updated ssm agent configuration
[Container] 2021/12/09 17:06:18 Registering with agent
[Container] 2021/12/09 17:06:18 Phases found in YAML: 3
[Container] 2021/12/09 17:06:18  BUILD: 8 commands
[Container] 2021/12/09 17:06:18  POST_BUILD: 2 commands
[Container] 2021/12/09 17:06:18  INSTALL: 0 commands
[Container] 2021/12/09 17:06:18 Phase complete: DOWNLOAD_SOURCE State: SUCCEEDED
[Container] 2021/12/09 17:06:18 Phase context status code:  Message: 
[Container] 2021/12/09 17:06:18 Entering phase INSTALL
[Container] 2021/12/09 17:06:18 Phase complete: INSTALL State: SUCCEEDED
[Container] 2021/12/09 17:06:18 Phase context status code:  Message: 
[Container] 2021/12/09 17:06:18 Entering phase PRE_BUILD
[Container] 2021/12/09 17:06:18 Phase complete: PRE_BUILD State: SUCCEEDED
[Container] 2021/12/09 17:06:18 Phase context status code:  Message: 
[Container] 2021/12/09 17:06:19 Entering phase BUILD
[Container] 2021/12/09 17:06:19 Running command ls -l src/*
-rw-r--r-- 1 root root 6300 Dec  9 17:06 src/template.yaml
[Container] 2021/12/09 17:06:19 Running command echo "logging into dockerhub"
logging into dockerhub
[Container] 2021/12/09 17:06:19 Running command docker login -u $DOCKER_USER -p $DOCKER_TOKEN
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store
Login Succeeded
[Container] 2021/12/09 17:06:20 Running command echo "pulling the KICS container"
pulling the KICS container
[Container] 2021/12/09 17:06:20 Running command docker pull checkmarx/kics:latest
latest: Pulling from checkmarx/kics
97518928ae5f: Pulling fs layer
574ff56a80e7: Pulling fs layer
49e7abbc7de1: Pulling fs layer
641a9e71cd64: Pulling fs layer
87e9880f3857: Pulling fs layer
641a9e71cd64: Waiting
87e9880f3857: Waiting
97518928ae5f: Download complete
49e7abbc7de1: Verifying Checksum
49e7abbc7de1: Download complete
574ff56a80e7: Verifying Checksum
574ff56a80e7: Download complete
97518928ae5f: Pull complete
641a9e71cd64: Verifying Checksum
641a9e71cd64: Download complete
87e9880f3857: Verifying Checksum
87e9880f3857: Download complete
574ff56a80e7: Pull complete
49e7abbc7de1: Pull complete
641a9e71cd64: Pull complete
87e9880f3857: Pull complete
Digest: sha256:d0d9d8c69e465fc28e19eb3db0c5018d5382a82ac3fc8c7a5129463faa68c2ca
Status: Downloaded newer image for checkmarx/kics:latest
docker.io/checkmarx/kics:latest
[Container] 2021/12/09 17:06:25 Running command echo "Running KICS - Fail the Build on High Severity Alerts"
Running KICS - Fail the Build on High Severity Alerts
[Container] 2021/12/09 17:06:25 Running command docker run -v $PWD/src:/path checkmarx/kics:latest scan -p "/path" -o "/path/" --fail-on high
                   .0MO.                                    
                   OMMMx                                    
                   ;NMX;                                    
                    ...           ...              ....     
WMMMd     cWMMM0.  KMMMO      ;xKWMMMMNOc.     ,xXMMMMMWXkc.
WMMMd   .0MMMN:    KMMMO    :XMMMMMMMMMMMWl   xMMMMMWMMMMMMl
WMMMd  lWMMMO.     KMMMO   xMMMMKc...'lXMk   ,MMMMx   .;dXx 
WMMMd.0MMMX;       KMMMO  cMMMMd        '    'MMMMNl'       
WMMMNWMMMMl        KMMMO  0MMMN               oMMMMMMMXkl.  
WMMMMMMMMMMo       KMMMO  0MMMX                .ckKWMMMMMM0.
WMMMMWokMMMMk      KMMMO  oMMMMc              .     .:OMMMM0
WMMMK.  dMMMM0.    KMMMO   KMMMMx'    ,kNc   :WOc.    .NMMMX
WMMMd    cWMMMX.   KMMMO    kMMMMMWXNMMMMMd .WMMMMWKO0NMMMMl
WMMMd     ,NMMMN,  KMMMO     'xNMMMMMMMNx,   .l0WMMMMMMMWk, 
xkkk:      ,kkkkx  okkkl        ;xKXKx;          ;dOKKkc    
Scanning with Keeping Infrastructure as Code Secure v1.4.8
Files scanned: 1
Parsed files: 1
Queries loaded: 473
Queries failed to execute: 0
------------------------------------
VPC FlowLogs Disabled, Severity: LOW, Results: 1
CIS ID: CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.9
Title: Ensure VPC flow logging is enabled in all VPCs
Description: VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet "Rejects" for VPCs.
Platform: CloudFormation
    [1]: ../../path/template.yaml:38
        037: Resources:
        038:   VPC:
        039:     Type: AWS::EC2::VPC
Shield Advanced Not In Use, Severity: LOW, Results: 2
Description: AWS Shield Advanced should be used for Amazon Route 53 hosted zone, AWS Global Accelerator accelerator, Elastic IP Address, Elastic Load Balancing, and Amazon CloudFront Distribution to protect these resources against robust DDoS attacks
Platform: CloudFormation
    [1]: ../../path/template.yaml:105
        104: 
        105:   NatGateway1EIP:
        106:     Type: AWS::EC2::EIP
    [2]: ../../path/template.yaml:111
        110: 
        111:   NatGateway2EIP:
        112:     Type: AWS::EC2::EIP
Security Group Rule Without Description, Severity: LOW, Results: 2
Description: AWS Security Group Rule should have description defined
Platform: CloudFormation
    [1]: ../../path/template.yaml:215
        214:       GroupDescription: Enable HTTP access via user defined port
        215:       SecurityGroupIngress:
        216:         - CidrIp: 0.0.0.0/0
    [2]: ../../path/template.yaml:205
        204:       GroupDescription: Enable SSH access via port 22
        205:       SecurityGroupIngress:
        206:         - CidrIp: 0.0.0.0/0
Unrestricted Security Group Ingress, Severity: MEDIUM, Results: 2
Description: AWS Security Group Ingress CIDR should not be open to the world
Platform: CloudFormation
    [1]: ../../path/template.yaml:205
        204:       GroupDescription: Enable SSH access via port 22
        205:       SecurityGroupIngress:
        206:         - CidrIp: 0.0.0.0/0
    [2]: ../../path/template.yaml:215
        214:       GroupDescription: Enable HTTP access via user defined port
        215:       SecurityGroupIngress:
        216:         - CidrIp: 0.0.0.0/0
RouterTable with Default Routing, Severity: MEDIUM, Results: 4
CIS ID: CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 5.4
Title: Ensure routing tables for VPC peering are "least access"
Description: Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection.
Platform: CloudFormation
    [1]: ../../path/template.yaml:140
        139:     DependsOn: InternetGatewayAttachment
        140:     Properties:
        141:       RouteTableId: !Ref PublicRouteTable
    [2]: ../../path/template.yaml:191
        190:       RouteTableId: !Ref PrivateRouteTable2
        191:       DestinationCidrBlock: 0.0.0.0/0
        192:       NatGatewayId: !Ref NatGateway2
    [3]: ../../path/template.yaml:170
        169:       RouteTableId: !Ref PrivateRouteTable1
        170:       DestinationCidrBlock: 0.0.0.0/0
        171:       NatGatewayId: !Ref NatGateway1
    [4]: ../../path/template.yaml:142
        141:       RouteTableId: !Ref PublicRouteTable
        142:       DestinationCidrBlock: 0.0.0.0/0
        143:       GatewayId: !Ref InternetGateway
EC2 Instance Has Public IP, Severity: MEDIUM, Results: 2
Description: EC2 Subnet should not have MapPublicIpOnLaunch set to true
Platform: CloudFormation
    [1]: ../../path/template.yaml:78
        077:       CidrBlock: !Ref PublicSubnet2CIDR
        078:       MapPublicIpOnLaunch: true
        079:       Tags:
    [2]: ../../path/template.yaml:67
        066:       CidrBlock: !Ref PublicSubnet1CIDR
        067:       MapPublicIpOnLaunch: true
        068:       Tags:
Security Groups With Exposed Admin Ports, Severity: HIGH, Results: 1
Description: Security Groups should not have ports open in (20, 21, 22, 23, 115, 137, 138, 139, 2049, 3389)
Platform: CloudFormation
    [1]: ../../path/template.yaml:205
        204:       GroupDescription: Enable SSH access via port 22
        205:       SecurityGroupIngress:
        206:         - CidrIp: 0.0.0.0/0
Security Group With Unrestricted Access To SSH, Severity: HIGH, Results: 1
CIS ID: CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 5.2
Title: Ensure no security groups allow ingress from 0.0.0.0/0 to remote server administration ports
Description: Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to remote server administration ports, such as SSH to port 22 and RDP to port 3389 .
Platform: CloudFormation
    [1]: ../../path/template.yaml:205
        204:       GroupDescription: Enable SSH access via port 22
        205:       SecurityGroupIngress:
        206:         - CidrIp: 0.0.0.0/0
HTTP Port Open, Severity: HIGH, Results: 1
Description: The HTTP port is open in a Security Group
Platform: CloudFormation
    [1]: ../../path/template.yaml:215
        214:       GroupDescription: Enable HTTP access via user defined port
        215:       SecurityGroupIngress:
        216:         - CidrIp: 0.0.0.0/0
Results Summary:
HIGH: 3
MEDIUM: 8
LOW: 5
INFO: 0
TOTAL: 16
Results saved to file /path/results.json
Scan duration: 12.60139072s
[Container] 2021/12/09 17:06:41 Command did not exit successfully docker run -v $PWD/src:/path checkmarx/kics:latest scan -p "/path" -o "/path/" --fail-on high exit status 50
[Container] 2021/12/09 17:06:41 Phase complete: BUILD State: FAILED
[Container] 2021/12/09 17:06:41 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: docker run -v $PWD/src:/path checkmarx/kics:latest scan -p "/path" -o "/path/" --fail-on high. Reason: exit status 50
[Container] 2021/12/09 17:06:41 Entering phase POST_BUILD
[Container] 2021/12/09 17:06:41 Running command echo Build completed on `date`
Build completed on Thu Dec 9 17:06:41 UTC 2021
[Container] 2021/12/09 17:06:41 Running command cat src/template.yaml > secure_template.yaml
[Container] 2021/12/09 17:06:41 Phase complete: POST_BUILD State: SUCCEEDED
[Container] 2021/12/09 17:06:41 Phase context status code:  Message: 
[Container] 2021/12/09 17:06:41 Expanding base directory path: .
[Container] 2021/12/09 17:06:41 Assembling file list
[Container] 2021/12/09 17:06:41 Expanding .
[Container] 2021/12/09 17:06:41 Expanding file paths for base directory .
[Container] 2021/12/09 17:06:41 Assembling file list
[Container] 2021/12/09 17:06:41 Expanding secure_template.yaml
[Container] 2021/12/09 17:06:41 Found 1 file(s)
[Container] 2021/12/09 17:06:41 Phase complete: UPLOAD_ARTIFACTS State: SUCCEEDED
[Container] 2021/12/09 17:06:41 Phase context status code:  Message: 